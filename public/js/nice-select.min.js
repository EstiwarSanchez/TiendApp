class PBSelect {
    constructor({
        selector = "defaultId",
        width = "100%",
        searchbox = false,
        selectAll = false,
        server = false,
        search_autofocus = false,
        offset = true,
        search_placeholder = "Search...",
        placeholder = "Select Option",
        breakpoint = "600",
    }) {
        // Random Number generated
        var randomID = Math.floor(Math.random() * (9999 - 0 + 1)) + 0;
        var SearchPlaceholder = search_placeholder;
        var MainPlaceholder = placeholder;
        var selectedIDFocus = 0; // Save wich dropdown is currently open
        var selectedMultiple = [];
        var selected_option_text = "";
        var first_option_text = "";
        var MDivSelector = selector.substring(1);

        this.selector = selector.substring(1);
        this.searchbox = searchbox;
        this.server = server;
        this.width = width;
        this.selectAll = selectAll;
        this.offset = offset;
        this.randomID = randomID;
        this.search_placeholder;
        this.breakpoint = breakpoint;
        this.search_autofocus = search_autofocus;
        this.selectClass = document.getElementById(this.selector).classList.value;

        this.getOptions = () => {
            return {
                selector: selector,
                width: width,
                searchbox: searchbox,
                server: server,
                selectAll: selectAll,
                search_autofocus: search_autofocus,
                offset: offset,
                search_placeholder: search_placeholder,
                placeholder: placeholder,
                breakpoint: breakpoint,
            };
        };
        // Define Variables

        // Hides native selector
        document.getElementById(this.selector).style.display = "none";

        // ** ADD OPTIONS TO LIST **placeholder
        this.SetupListOptions = () => {
            // Get All options inside Selectbox
            var x = document.getElementById(this.selector);
            for (var i = 0; i < x.length; i++) {
                var optionText = x[i].text;
                var optionValue = x[i].value;
                var optionDisabled = x[i].disabled;
                var optionSelected = x[i].selected;
                var optionSeparator = x[i].getAttribute("data-separator");
                var optionImg = x[i].getAttribute("data-img");
                var optionIcon = x[i].getAttribute("data-icon");
                var optionColor = x[i].getAttribute("data-color");

                // Option Disabled
                if (optionDisabled == true) {
                    var is_disabled = "pb_disabled";
                } else {
                    var is_disabled = "";
                }
                // Option Disabled
                if (optionSelected == true) {
                    var is_selected = true;
                } else {
                    var is_selected = false;
                }
                // Separator
                if (optionSeparator) {
                    var is_separator = "pb_separator";
                } else {
                    var is_separator = "";
                }
                // Check for Attachment
                if (optionImg) {
                    var has_attachment = "<img src=" + optionImg + ">";
                } else {
                    if (optionIcon) {
                        var has_attachment =
                            "<i class='" +
                            optionIcon +
                            "' aria-hidden='true'></i>";
                    }else if(optionColor) {
                        var has_attachment = "<span class='w-3 h-3 shadow inline-block mr-1 rounded-full' aria-hidden='true' style='background-color:"+optionColor+"; color:"+optionColor+";'></span>"
                    }else {
                        var has_attachment = "";
                    }
                }

                // Append
                document
                    .getElementById("ul_" + randomID)
                    .insertAdjacentHTML(
                        "beforeend",
                        "<li data-val='"+optionValue+"' " +
                            (is_selected && optionValue != ""
                                ? " style='background-color: #ececec' "
                                : " ") +
                            "class='focus:border-blue-300 focus:ring-blue-200 focus:ring focus:ring-opacity-50 focus:bg-gray-50 " + (optionValue!='' ? 'nice-option' : '') + " "+
                            is_disabled +
                            " " +
                            is_separator +
                            "' " +
                            (is_disabled == "" ? "tabindex='0'>" : ">") +
                            has_attachment +
                            " " +
                            optionText +
                            "</li>"
                    );


                 var item = document
                    .getElementById("ul_" + randomID).lastChild
                var lastIndex =  Array.from(
                    item.parentNode.children
                ).indexOf(item);


                if (is_selected && x.attributes.multiple) {
                    selectedMultiple.push(lastIndex);
                }

                if (
                    selectedMultiple.length > 0 &&
                    optionValue == "" &&
                    x.attributes.multiple
                ) {
                    selectedMultiple.splice(selectedMultiple.indexOf(lastIndex), 1);
                    x[i].selected = false;
                }
            }

            if (selectedMultiple.length > 0 && x.attributes.multiple) {
                var SelectedNames = "";
                if (this.searchbox == true) {
                    if (this.selectAll) {
                        var numberless = -2;
                    }else{
                        var numberless = -1;
                    }
                } else {
                    var numberless = 0;
                }
                for (var i = 0; i < selectedMultiple.length; i++) {
                    var indexValFromArray = selectedMultiple[i];
                    x.getElementsByTagName("option")[
                        indexValFromArray + numberless
                    ].selected = "selected";
                    SelectedNames +=
                        ", " + x[indexValFromArray + numberless].innerHTML;
                }
                SelectedNames = SelectedNames.substring(2);
                document.getElementById("main_" + randomID).innerHTML =
                    SelectedNames +
                    `<svg class="svg-inline--fa w-4 h-4 transition-transform arrow arrows_pb" id='arrow_${randomID}' aria-hidden="true" focusable="false" data-prefix="fas" data-icon="caret-down" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z" class=""></path></svg>`;
            }

            document
                .querySelectorAll("#ul_" + randomID + " li")
                .forEach((item) => {
                    item.addEventListener("click", (e) => {
                        if (item.classList.contains('nice-option')) {

                            const index = Array.from(
                                item.parentNode.children
                            ).indexOf(item);
                            var selected_option = document.getElementById(
                                this.selector
                            );

                            if (this.searchbox == true) {
                                if (this.selectAll) {
                                    var numberless = -2;
                                }else{
                                    var numberless = -1;
                                }
                            } else {
                                var numberless = 0;
                            }

                            if (
                                item.classList.contains("pb_disabled") ||
                                item.classList.contains("nofocus") ||
                                item.classList.contains("pb_separator")
                            ) {
                            } else {
                                if (selected_option.attributes.multiple) {
                                    var SelectedNames = "";
                                    event.preventDefault();
                                    if (selectedMultiple.indexOf(index) > -1) {
                                        var index_test =
                                            selectedMultiple.indexOf(index);
                                        selectedMultiple.splice(index_test, 1);
                                        document.getElementById(this.selector)[
                                            index + numberless
                                        ].selected = false;
                                        item.style.backgroundColor = "transparent";
                                        var last = document
                                        .getElementById(this.selector)
                                        .getElementsByTagName("option")[
                                            index + numberless
                                        ];
                                        Livewire.emit('changeMultiple',[this.selector, last.value, last.text , false]);
                                    } else {
                                        selectedMultiple.push(index);
                                        item.style.backgroundColor = "#ececec";
                                        var last = document
                                        .getElementById(this.selector)
                                        .getElementsByTagName("option")[
                                            index + numberless
                                        ];
                                        Livewire.emit('changeMultiple',[this.selector, last.value, last.text , true]);
                                    } // Adds to array

                                    // Check if array is empty, if it is, gets the first option
                                    if (selectedMultiple.length == 0) {
                                        SelectedNames = MainPlaceholder;
                                    } else {
                                        for (
                                            var i = 0;
                                            i < selectedMultiple.length;
                                            i++
                                        ) {
                                            var indexValFromArray =
                                                selectedMultiple[i];
                                            var curremtOption = document
                                                .getElementById(this.selector)
                                                .getElementsByTagName("option")[
                                                indexValFromArray + numberless
                                            ];
                                            curremtOption.selected = "selected";
                                            document
                                                .getElementById(this.selector)
                                                .querySelector(
                                                    'option[value=""]'
                                                ).selected = false;
                                            if (
                                                selectedMultiple.length > 1 &&
                                                curremtOption.value == ""
                                            ) {
                                                curremtOption.selected = false;
                                            }
                                            SelectedNames +=
                                                ", " +
                                                selected_option[
                                                    indexValFromArray + numberless
                                                ].innerHTML;
                                        }
                                        SelectedNames = SelectedNames.substring(2);
                                    }

                                    // Adds the texto o the main DIV
                                    document.getElementById(
                                        "main_" + randomID
                                    ).innerHTML =
                                        SelectedNames +
                                        `<svg class="svg-inline--fa w-4 h-4 transition-transform arrow arrows_pb" id='arrow_${randomID}' aria-hidden="true" focusable="false" data-prefix="fas" data-icon="caret-down" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z" class=""></path></svg>`;
                                } else {
                                    // Get Index of option
                                    document
                                        .getElementById(this.selector)
                                        .getElementsByTagName("option")[
                                        index + numberless
                                    ].selected = "selected";

                                    item.style.backgroundColor = "#ececec";
                                    // Updates main div
                                    document.getElementById(
                                        "main_" + randomID
                                    ).innerHTML =
                                        item.textContent +
                                        `<svg class="svg-inline--fa w-4 h-4 transition-transform arrow arrows_pb" id='arrow_${randomID}' aria-hidden="true" focusable="false" data-prefix="fas" data-icon="caret-down" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z" class=""></path></svg>`;
                                    document.getElementById(
                                        "ul_" + randomID
                                    ).style.display = "none";

                                    // Remove class so Body has Scroll Again
                                    document.body.classList.remove(
                                        "stop-scrolling"
                                    );
                                    if (
                                        document.body.contains(
                                            document.getElementById("deletebg")
                                        )
                                    ) {
                                        document
                                            .getElementById("deletebg")
                                            .remove();
                                    }

                                    FixVerticalViewPort();

                                    Array.from(
                                        document.querySelectorAll(
                                            "#ul_" + randomID + " li"
                                        )
                                    ).forEach(function (val) {
                                        if (item.innerHTML != val.innerHTML) {
                                            val.style.backgroundColor = null;
                                        }
                                    });
                                }

                                // When click, resets search filter
                                if (this.searchbox == true && !selected_option.attributes.multiple) {
                                    document.getElementById(
                                        "input_" + randomID
                                    ).value = "";
                                    Array.from(
                                        document.querySelectorAll(
                                            "#ul_" + randomID + " li"
                                        )
                                    ).forEach(function (val) {
                                        val.style.display = "block";
                                        if (item.innerHTML != val.innerHTML) {
                                            val.style.backgroundColor = null;
                                        }
                                    });
                                }

                                this.triggerChange(
                                    document.getElementById(this.selector)
                                );
                            }
                        }
                    });
                });
        };

        this.triggerChange = (el) => {
            var event = document.createEvent("HTMLEvents");
            event.initEvent("change", true, false);
            el.dispatchEvent(event);
        };

        // ** CREATE MAIN **
        (this.CriarDivBase = () => {
            document
                .getElementById(this.selector)
                .insertAdjacentHTML(
                    "afterend",
                    '<div id="pb_' +
                        randomID +
                        '" data-search="' +
                        this.searchbox +
                        '" wire:ignore class="pb_mainselect relative"></div>'
                );
            document
                .getElementById("pb_" + randomID)
                .insertAdjacentHTML(
                    "afterbegin",
                    '<div id="main_' +
                        randomID +
                        '" tabindex="0" style="width:' +
                        this.width +
                        ';" class="pb_atual border px-2 '+this.selectClass+'"></div><ul id="ul_' +
                        randomID +
                        '" class="pb_ul_inner text-gray-800 dark:text-gray-300 shadow border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700"></ul>'
                );

            var element_ul = document.getElementById("ul_" + randomID);
            var element_pb = document.getElementById("pb_" + randomID);

            element_pb.setAttribute('x-on:click.away', `document.getElementById("ul_${randomID}").style.display =
            "none",document.getElementById('arrow_${randomID}').classList.remove("fa-rotate-180");`);

            // Set Width of UL
            var select_width = document.getElementById(
                "main_" + randomID
            ).offsetWidth;
            element_ul.style.width = select_width + "px";

            if (this.searchbox == true) {
                document
                    .querySelector("#ul_" + randomID)
                    .insertAdjacentHTML(
                        "afterbegin",
                        '<li class="nofocus bg-white dark:bg-gray-700 relat"><div class="innerinput relative"><input placeholder="' +
                            SearchPlaceholder +
                            '" class="pb_input focus:border-blue-300 focus:ring-blue-200 border-gray-300 dark:border-gray-600 dark:bg-opacity-5 dark:bg-white focus:ring focus:ring-opacity-50 rounded-md py-2 text-sm shadow-sm text-gray-800 dark:text-gray-200 w-full" id="input_' +
                            randomID +
                            '" type="search">'+
                            `${this.server ? '<button style="pointer-events: none;" class="btn-loading absolute r-0 mt-3 mr-3 pr-2 focus:outline-none"><span class="hidden button-loading transition-all"><svg aria-hidden="true" focusable="false" data-prefix="fa" data-icon="spinner" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg="" class="svg-inline--fa fa-spin  w-4 h-4 text-psi-blue-600 "><path fill="currentColor" d="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"></path></svg></span><span class="button-text"></span></button>' : ''}</div></li>`
                    );

                    if (this.selectAll) {
                        document
                        .querySelector("#ul_" + randomID)
                        .insertAdjacentHTML(
                            "afterbegin",
                            `<li class="nofocus bg-white dark:bg-gray-700 relat"><div class="innerinput relative flex gap-3">
                            <button wire:loading.attr="disabled" wire:loading.class="pointer-events-none disabled" id="all_${randomID}" type="button" class="w-full focus:border-psi-blue-300 focus:ring focus:ring-psi-blue-200 bg-psi-blue-600 text-white hover:bg-psi-blue-500 active:bg-psi-blue-700 focus:ring-opacity-50 px-2 py-1 text-xs btn-loading shadow-sm inline-flex items-center focus:outline-none border border-transparent rounded-md font-semibold tracking-widest disabled:opacity-25 transition" @click="selectAllOptions('ul_${randomID}')">
                            <span class="hidden" wire:loading.inline="">
                                <svg class="svg-inline--fa fa-spin" aria-hidden="true" focusable="false" data-prefix="fa" data-icon="spinner" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"></path></svg>
                            </span>
                            <span class="button-loading transition-all hidden">
                                <svg class="svg-inline--fa fa-spin" aria-hidden="true" focusable="false" data-prefix="fa" data-icon="spinner" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"></path></svg>
                            </span>
                            <span wire:loading.remove="" class="button-text transition-all mx-auto">Todos</span>
                            </button>
                            <button wire:loading.attr="disabled" wire:loading.class="pointer-events-none disabled" id="none_${randomID}" type="button" class="w-full focus:border-gray-300 focus:ring focus:ring-gray-200 bg-gray-600 text-white hover:bg-gray-500 active:bg-gray-700 focus:ring-opacity-50 px-2 py-1 text-xs btn-loading shadow-sm inline-flex items-center focus:outline-none border border-transparent rounded-md font-semibold tracking-widest disabled:opacity-25 transition" @click="selectAllOptions('ul_${randomID}',false)">
                            <span class="hidden" wire:loading.inline="">
                                <svg class="svg-inline--fa fa-spin" aria-hidden="true" focusable="false" data-prefix="fa" data-icon="spinner" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"></path></svg>
                            </span>
                            <span class="button-loading transition-all hidden">
                                <svg class="svg-inline--fa fa-spin" aria-hidden="true" focusable="false" data-prefix="fa" data-icon="spinner" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"></path></svg>
                            </span>
                            <span wire:loading.remove="" class="button-text transition-all mx-auto">Ninguno</span>
                            </button>
                            </div></li>`
                        );
                    }
            }

            // Get Selected Option
            var selected_option = document.getElementById(this.selector);
            if (!selected_option.attributes.multiple) {
                // Check if exists any selected option in the native selectbox
                for (var i = 0; i < selected_option.length; i++) {
                    if (selected_option[i].getAttribute("selected") == "") {
                        var FoundSelectedOP = 1;
                    }
                }

                // if is 1, its because found it, if not get the placeholder.
                if (FoundSelectedOP == 1) {
                    first_option_text =
                        selected_option.options[selected_option.selectedIndex]
                            .text;
                } else {
                    first_option_text = MainPlaceholder;
                }
            } else {
                // Se for multiple, vai buscar sempre o placeholder
                first_option_text = MainPlaceholder;
            }

            document.getElementById("main_" + randomID).innerHTML =
                first_option_text +
                `<svg class="svg-inline--fa w-4 h-4 transition-transform arrow arrows_pb" id='arrow_${randomID}' aria-hidden="true" focusable="false" data-prefix="fas" data-icon="caret-down" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z" class=""></path></svg>`;

            // Add event Listener on click main div

            document.getElementById("main_" + randomID).addEventListener(
                "click",
                () => {
                    this.toggleList();
                    // this.triggerChange(document.getElementById(this.selector))
                },
                false
            );

            document.getElementById("main_" + randomID).addEventListener(
                "keyup",
                (e) => {
                    if (e.keyCode == 13) {
                        this.toggleList();
                        // this.triggerChange(document.getElementById(this.selector))
                    }
                },
                false
            );
            this.closeList = () =>{
                document.getElementById("ul_" + randomID).style.display =
                        "none";
                    // this.triggerChange(document.getElementById(this.selector));
                   document.getElementById(`arrow_${randomID}`).classList.remove("fa-rotate-180");
            }

            this.toggleList = () => {
                // Reset dropdown position, in case it was changed before
                var top =
                    document
                        .getElementById("main_" + randomID)
                        .getBoundingClientRect().top + 35;
                document.getElementById("ul_" + randomID).style.position =
                    "absolute";
                document.getElementById("ul_" + randomID).style.bottom = "";

                // Check Windows Width for Mobile
                if (window.innerWidth < breakpoint) {
                    document
                        .getElementById("ul_" + randomID)
                        .classList.add("pb_ul_mobile");
                    document
                        .getElementById(MDivSelector)
                        .insertAdjacentHTML(
                            "afterend",
                            '<div id="deletebg" class="pb_ul_bg shadow-lg"></div>'
                        );
                    document.body.classList.add("stop-scrolling");
                } else {
                    document
                        .getElementById("ul_" + randomID)
                        .classList.remove("pb_ul_mobile");
                }

                // Correct the width of the UL when window is resized
                var select_width = document.getElementById(
                    "main_" + randomID
                ).offsetWidth;
                element_ul.style.width = select_width + "px";

                if (
                    document.getElementById("ul_" + randomID).style.display ==
                    "block"
                ) {
                    this.closeList();
                } else {
                    Array.from(
                        document.querySelectorAll(".pb_ul_inner")
                    ).forEach(function (val) {
                        val.style.display = "none";
                    });
                    PBfadeIn(document.getElementById("ul_" + randomID));
                    Array.from(document.querySelectorAll(".arrows_pb")).forEach(
                        function (val) {
                            val.classList.remove("fa-rotate-180");
                        }
                    );
                    document
                        .querySelector("#arrow_" + randomID)
                        .classList.add("fa-rotate-180");
                }

                // Call function at end of the dropdown movement
                if (offset == true) {
                    FixVerticalViewPort();
                }

                // Check if autofocus and search is enabled
                if (search_autofocus == true && searchbox == true) {
                    document.getElementById("input_" + randomID).focus();
                }
            };
            // ** SETUP LIST OPTIONS **
            this.SetupListOptions();
        }),
            // ** CREATES MAIN DIV **
            this.CriarDivBase();

        // ** ON SCROLL EVENT TO PREVENT OUT OF VIEWPORT **
        document.addEventListener(
            "scroll",
            () => {
                scrollSelect();
            },
            false
        );

        function scrollSelect() {
            if (selectedIDFocus != 0) {
                var currentWindowViewOffSet = Math.max(
                    document.documentElement.clientHeight || 0,
                    window.innerHeight || 0
                );
                var container = document.getElementById("main_" + randomID);
                var lastchild = container.lastChild;
                var currentElementViewOffSet =
                    lastchild.getBoundingClientRect().top;

                var MainDivOff = document.getElementById(
                    "ul_" + randomID
                ).clientHeight;
                var DiffBetW =
                    currentWindowViewOffSet - currentElementViewOffSet; // Difference between Element and Window

                // If Difference is greater than List's height
                if (DiffBetW > MainDivOff) {
                    FixVerticalViewPort();
                }
            }
        }

        // ** FADE OUT FUNCTION **
        function PBfadeOut(el) {
            el.style.opacity = 1;
            (function fade() {
                if ((el.style.opacity -= 0.1) < 0) {
                    el.style.display = "none";
                } else {
                    requestAnimationFrame(fade);
                }
            })();
        }
        // ** FADE IN FUNCTION **
        function PBfadeIn(el, display) {
            el.style.opacity = 0;
            el.style.display = display || "block";
            (function fade() {
                var val = parseFloat(el.style.opacity);
                if (!((val += 0.1) > 1)) {
                    el.style.opacity = val;
                    requestAnimationFrame(fade);
                }
            })();
        }

        // ** CHECK VIEW PORT OFFSET **
        function FixVerticalViewPort() {
            var currentWindowView = Math.max(
                document.documentElement.clientHeight || 0,
                window.innerHeight || 0
            );
            var container = document.getElementById("ul_" + randomID);
            var lastchild = container.lastChild;
            var currentElementView = lastchild.getBoundingClientRect().top;

            // +50 to fix outer border
            if (
                Math.round(currentElementView + 50) >
                Math.round(currentWindowView)
            ) {
                selectedIDFocus = randomID;
                var top =
                    document
                        .getElementById("main_" + randomID)
                        .getBoundingClientRect().top + 35;
                document.getElementById("ul_" + randomID).style.position =
                    "fixed";
                document.getElementById("ul_" + randomID).style.bottom = "";
            } else {
                var top =
                    document
                        .getElementById("main_" + randomID)
                        .getBoundingClientRect().top + 35;
                selectedIDFocus = 0;
                document.getElementById("ul_" + randomID).style.position =
                    "absolute";
                document.getElementById("ul_" + randomID).style.bottom = "";
            }
        }

        // ** SEARCH BAR **
        if (this.searchbox == true) {
            var input, filter, ul, li, i, txtValue;
            input = document.getElementById("input_" + randomID);
            input.setAttribute('x-on:input.debounce.600ms',`Livewire.emit('searchSelect',[${this.selector}, document.getElementById("input_${randomID}").value]);`)
            document.getElementById("input_" + randomID).addEventListener(
                "keyup",
                () => {
                    ul = document.getElementById("ul_" + randomID);
                    if (this.server) {
                        var options = ul.querySelectorAll(".nice-option");
                        if (options.length > 0) {
                            options.forEach(ele => {
                                ele.remove();
                            });
                        }
                    } else {
                        filter = input.value.toUpperCase();

                        li = ul.getElementsByTagName("li");

                        // Hides all separators
                        Array.from(
                            document.querySelectorAll(".pb_separator")
                        ).forEach(function (val) {
                            val.style.display = "none";
                        });

                        for (i = 0; i < li.length; i++) {
                            // If Empty, appears every line
                            if (filter == "") {
                                Array.from(
                                    document.querySelectorAll(
                                        "#ul_" + randomID + " li"
                                    )
                                ).forEach(function (val) {
                                    val.style.display = "block";
                                });
                            } else {
                                // Removes separators from search
                                txtValue = li[i].innerText || li[i].textContent;
                                if (
                                    txtValue.toUpperCase().indexOf(filter) >
                                        -1 &&
                                    !li[i].classList.contains("pb_separator")
                                ) {
                                    li[i].style.display = "";
                                } else {
                                    if (!li[i].classList.contains("nofocus")) {
                                        li[i].style.display = "none";
                                    }
                                }
                            }
                        }
                    }
                },
                false
            );
        }
        // ** CLICK OUTSIDE **
        /* document.addEventListener(
            "click",
            function (e) {
                if (
                    !e.target.closest(".pb_ul_inner") ||
                    !event.target.classList.contains("pb_input")
                ) {
                    if (
                        !event.target.classList.contains("pb_input") &&
                        !event.target.classList.contains("pb_atual")
                    ) {
                        if (event.target.nodeName != "LI") {
                            Array.from(
                                document.querySelectorAll(".pb_ul_inner")
                            ).forEach(function (val) {
                                val.style.display = "none";
                            });
                            Array.from(
                                document.querySelectorAll(".arrows_pb")
                            ).forEach(function (val) {
                                val.classList.remove("fa-rotate-180");
                            });

                            // When click outside, resets search filter
                            Array.from(
                                document.querySelectorAll("#input_" + randomID)
                            ).forEach(function (val) {
                                val.value = "";
                                // Livewire.emit('searchSelect',[this.selector, val.value]);
                            });
                            Array.from(
                                document.querySelectorAll(
                                    "#ul_" + randomID + " li"
                                )
                            ).forEach(function (val) {
                                val.style.display = "block";
                            });

                            // Remove class so Body has Scroll Again
                            document.body.classList.remove("stop-scrolling");
                            if (
                                document.body.contains(
                                    document.getElementById("deletebg")
                                )
                            ) {
                                document.getElementById("deletebg").remove();
                            }

                            if (document.getElementById("ul_" + randomID)) {
                                // Checks if element existed in case it was destroyed
                                var top =
                                    document
                                        .getElementById("main_" + randomID)
                                        .getBoundingClientRect().top + 35;
                                selectedIDFocus = 0;
                                document.getElementById(
                                    "ul_" + randomID
                                ).style.position = "absolute";
                                document.getElementById(
                                    "ul_" + randomID
                                ).style.bottom = "";
                            }
                        }
                    }
                }
            },
            true
        ); */
    }

    // ** METHODS **
    // DESTROY
    Destroy() {
        // Destroy main element and shows up native selectbox
        document.getElementById("pb_" + this.randomID).remove();
        document.getElementById(this.selector).style.display = "block";
    }
    // UPDATE
    Update() {
        // Removes all Li that does not contain class "nofocus" - Its the search.
        Array.from(
            document.querySelectorAll("#ul_" + this.randomID + " li")
        ).forEach(function (val) {
            if (!val.classList.contains("nofocus")) {
                val.remove();
            }
        });
        this.SetupListOptions();
    }
    // GET ID
    GetID() {
        // Return ID Generated when building Dropdown, so you can add custom classes
        return this.randomID;
    }

    // CHANGE
    Change(properties) {
        if (properties.placeholder) {
            document.getElementById("main_" + this.randomID).innerHTML =
                properties.placeholder +
                `<svg class="svg-inline--fa w-4 h-4 transition-transform arrow arrows_pb" id='arrow_${this.randomID}' aria-hidden="true" focusable="false" data-prefix="fas" data-icon="caret-down" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z" class=""></path></svg>`;
        }
        if (properties.search_placeholder) {
            document.getElementById("input_" + this.randomID).placeholder =
                properties.search_placeholder;
        }
        if (properties.options && typeof properties.options === "object") {
            // Clean every option inside the original selector
            document.querySelector("#" + this.selector).innerHTML = "";
            // Loop object and add new options to original select box
            var prop = Object.keys(properties.options).length;
            for (var i = 0; i < prop; i++) {
                var change_disabled, change_separator, change_img, change_icon;

                if (properties.options[i].disabled == true) {
                    change_disabled = "disabled";
                } else {
                    change_disabled = "";
                }
                if (properties.options[i].separator == true) {
                    change_separator = "data-separator='true'";
                } else {
                    change_separator = "";
                }
                if (properties.options[i].img) {
                    change_img = "data-img='" + properties.options[i].img + "'";
                } else {
                    change_img = "";
                }
                if (properties.options[i].icon) {
                    change_icon =
                        "data-icon='" + properties.options[i].icon + "'";
                } else {
                    change_icon = "";
                }

                document
                    .getElementById(this.selector)
                    .insertAdjacentHTML(
                        "beforeend",
                        "<option " +
                            change_img +
                            " " +
                            change_icon +
                            " " +
                            change_separator +
                            " " +
                            change_disabled +
                            " value=" +
                            properties.options[i].value +
                            " >" +
                            properties.options[i].inner_text +
                            "</option>"
                    );
            }
        } else {
            console.error("Options must be and Object. Read documentation.");
        }
    }
    // Set option
    SetOption(properties) {
        var selectorIndex = document.getElementById(this.selector);

        // If is set by index
        if (properties.type == "byIndex") {
            selectorIndex.selectedIndex = properties.value;

            // Trigger onchange function
            if (selectorIndex.getAttribute("onchange") != null) {
                this.triggerChange(document.getElementById(this.selector));
            }
            document.getElementById("main_" + this.randomID).innerHTML =
                selectorIndex.options[selectorIndex.selectedIndex].text +
                `<svg class="svg-inline--fa w-4 h-4 transition-transform arrow arrows_pb" id='arrow_${this.randomID}' aria-hidden="true" focusable="false" data-prefix="fas" data-icon="caret-down" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z" class=""></path></svg>`;

            // if is set by value
        } else if (properties.type == "byValue") {
            for (var i = 0; i < selectorIndex.length; i++) {
                if (selectorIndex[i].value == properties.value) {
                    selectorIndex.selectedIndex = selectorIndex[i].index;

                    // Trigger onchange function
                    if (selectorIndex.getAttribute("onchange") != null) {
                        this.triggerChange(
                            document.getElementById(this.selector)
                        );
                    }
                    document.getElementById("main_" + this.randomID).innerHTML =
                        selectorIndex[i].innerText +
                        `<svg class="svg-inline--fa w-4 h-4 transition-transform arrow arrows_pb" id='arrow_${this.randomID}' aria-hidden="true" focusable="false" data-prefix="fas" data-icon="caret-down" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z" class=""></path></svg>`;
                }
            }
        }
    }
    // Append/Prepend Option
    AppendOption(properties) {

        // Get position e check if position is undefined.
        var position = properties.position;
        if (position == undefined) {
            var position = "beforeend";
        }

        if (properties.options && typeof properties.options === "object") {
            // Loop object and add new options to original select box
            var prop = Object.keys(properties.options).length;
            for (var i = 0; i < prop; i++) {
                var change_disabled, change_separator, change_img, change_icon, selected;

                if (properties.options[i].disabled == true) {
                    change_disabled = "disabled";
                } else {
                    change_disabled = "";
                }
                if (properties.options[i].selected == true) {
                    selected = "selected";
                } else {
                    selected = "";
                }
                if (properties.options[i].separator == true) {
                    change_separator = "data-separator='true'";
                } else {
                    change_separator = "";
                }
                if (properties.options[i].img) {
                    change_img = "data-img='" + properties.options[i].img + "'";
                } else {
                    change_img = "";
                }
                if (properties.options[i].icon) {
                    change_icon =
                        "data-icon='" + properties.options[i].icon + "'";
                } else {
                    change_icon = "";
                }

                document
                    .getElementById(this.selector)
                    .insertAdjacentHTML(
                        position,
                        "<option " +
                            change_img +
                            " " +
                            change_icon +
                            " " +
                            change_separator +
                            " " +
                            change_disabled +
                            " value=" +
                            properties.options[i].value +
                            " "+selected+">" +
                            properties.options[i].inner_text +
                            "</option>"
                    );
            }
        } else {
            console.error("Options must be and Object. Read documentation.");
        }
    }
}
